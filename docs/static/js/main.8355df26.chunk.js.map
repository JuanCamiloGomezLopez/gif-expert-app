{"version":3,"sources":["components/AddCategory.js","components/GifgridItem.js","helpers/getgifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpert.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","GifgridItem","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","setTimeout","useFetchGifs","image","key","GifExpert","categories","ReactDOM","render","document","getElementById"],"mappings":"2NAGaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAAkB,EAEPC,mBAAS,IAFF,mBAEpCC,EAFoC,KAExBC,EAFwB,KAgB/C,OACI,0BAAMC,SATe,SAACC,GAClBA,EAAEC,iBAECJ,IACHF,GAAe,SAAAO,GAAI,OAAKL,GAAL,mBAAoBK,OACvCJ,EAAc,OAKd,2BACIK,KAAK,OACLC,MAAQP,EACRQ,SAjBgB,SAACL,GACnBF,EAAcE,EAAEM,OAAOF,YCDpBG,EAAc,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAIrC,OAFJC,QAAQC,IAAI,CAACJ,KAAGC,QAAMC,QAGd,yBAAKG,UAAU,wCACZ,yBAAKC,IAAMJ,EAAMK,IAAMN,IACtB,+BAAKA,EAAL,O,uBCXGO,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEfR,EAFe,iDAEiCS,UAAUF,GAF3C,+DAGFG,MAAMV,GAHJ,cAGfW,EAHe,gBAIAA,EAAKC,OAJL,uBAIdC,EAJc,EAIdA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAKgB,EAAIC,OAAOC,iBAAiBlB,QAVpB,kBAcdc,GAdc,4CAAH,sDCCTK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECCX,SAACA,GAAc,IAAD,EAEhBrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAJ6B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAgBtC,OAVAC,qBAAU,WACNjB,EAAQC,GAAUiB,MAAK,SAAAR,GACnBS,YAAW,WACPH,EAAS,CACLT,KAAMG,EACNI,SAAS,MACf,UAEP,CAACb,IAEGc,EDfuBK,CAAanB,GAA/BoB,EAFuB,EAE5Bd,KAAYO,EAFgB,EAEhBA,QAEnB,OACI,oCACA,4BAAMb,GAEJa,GAAW,UAEb,yBAAKjB,UAAU,cAEHwB,EAAMZ,KAAI,SAAAC,GAAG,OACb,kBAAC,EAAD,eACAY,IAAKZ,EAAIlB,IACLkB,UEdXa,EAAY,WAAO,IAAD,EAEQ3C,mBAAS,CAAC,SAFlB,mBAErB4C,EAFqB,KAET7C,EAFS,KAI1B,OACG,6BACK,0CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAE7B,4BAEK6C,EAAWf,KAAI,SAAAR,GACf,OAAO,kBAAC,EAAD,CAASqB,IAAKrB,EAAUA,SAAUA,UCT1DwB,IAASC,OAEP,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.8355df26.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setcategories})=> {\r\n  \r\n    const [inputValue, setinputValue] = useState(\"\");\r\n\r\n    const handInputChange = (e) => {\r\n          setinputValue(e.target.value);\r\n    } \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n      \r\n       if (inputValue){\r\n        setcategories( cats => [inputValue, ...cats]);\r\n        setinputValue(\"\");\r\n       }      \r\n    }\r\nreturn (  \r\n    <form onSubmit = {handleSubmit}>        \r\n        <input\r\n            type=\"text\"\r\n            value={ inputValue }  \r\n            onChange={ handInputChange }               \r\n        />  \r\n    </form>   \r\n);\r\n\r\n} \r\n\r\nAddCategory.propTypes={\r\n    setcategories: propTypes.func.isRequired   \r\n}\r\n\r\n","\r\nimport React from 'react'\r\n\r\n\r\n\r\nimport '../index.css';\r\n\r\nexport const GifgridItem = ( {id, title, url }) => {\r\n\r\nconsole.log({id,title,url});\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__tada\" >\r\n           <img src={ url } alt={ title } />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n\r\n  export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=MmMGSxx1GQ9COxUTFev2rQxVeAC19eXm`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n    \r\n\r\n}","import React from 'react'\r\nimport { GifgridItem } from './GifgridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:image, loading} = useFetchGifs(category);\r\n   \r\n    return (\r\n        <>\r\n        <h3 >{category}</h3>  \r\n\r\n         {loading && \"loading\"}\r\n\r\n        <div className=\"card-grid \">         \r\n                          \r\n                {   image.map(img => (\r\n                    <GifgridItem  \r\n                    key={img.id}\r\n                    {...img}/>\r\n                    ))\r\n                }           \r\n        </div> \r\n        </>\r\n    )\r\n}\r\n","\r\nimport { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getgifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\nconst [state, setstate] = useState({\r\n    data: [],\r\n    loading: true    \r\n});\r\n    useEffect(() => {\r\n        getGifs(category).then(img => {                \r\n            setTimeout(()=>{\r\n                setstate({\r\n                    data: img,\r\n                    loading: false})\r\n            },1000);           \r\n        })        \r\n    }, [category])  \r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpert = () => {\r\n\r\n   const [categories, setcategories] = useState([\"goku\"]);\r\n    \r\n     return ( \r\n        <div>\r\n             <h2>Gif Expert</h2>         \r\n             <hr />\r\n             <AddCategory setcategories={setcategories}/>          \r\n\r\n            <ol>\r\n              {\r\n                 categories.map(category => {\r\n                 return <GifGrid key={category} category={category} />\r\n                 })\r\n              }\r\n            </ol>                   \r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport { GifExpert } from './GifExpert';\n\n\n\nReactDOM.render( \n\n  <GifExpert />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}